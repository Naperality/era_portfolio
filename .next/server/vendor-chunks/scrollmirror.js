"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/scrollmirror";
exports.ids = ["vendor-chunks/scrollmirror"];
exports.modules = {

/***/ "(ssr)/./node_modules/scrollmirror/dist/ScrollMirror.modern.js":
/*!***************************************************************!*\
  !*** ./node_modules/scrollmirror/dist/ScrollMirror.modern.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ s),\n/* harmony export */   getScrollProgress: () => (/* binding */ r),\n/* harmony export */   hasCSSOverflow: () => (/* binding */ o),\n/* harmony export */   hasOverflow: () => (/* binding */ t),\n/* harmony export */   nextTick: () => (/* binding */ e)\n/* harmony export */ });\nconst e = ()=>new Promise((e)=>{\n        requestAnimationFrame(()=>e());\n    }), t = ({ clientWidth: e, clientHeight: t, scrollWidth: o, scrollHeight: r })=>r > t || o > e, o = (e)=>{\n    const t = window.getComputedStyle(e).overflow;\n    return t.includes(\"auto\") || t.includes(\"scroll\");\n}, r = (e)=>{\n    if (null == e) return {\n        x: 0,\n        y: 0\n    };\n    const { scrollTop: t, scrollHeight: o, clientHeight: r, scrollLeft: n, scrollWidth: l, clientWidth: s } = e, i = o - r;\n    return {\n        x: n ? n / Math.max(1e-5, l - s) : 0,\n        y: t ? t / Math.max(1e-5, i) : 0\n    };\n};\nfunction n() {\n    return n = Object.assign ? Object.assign.bind() : function(e) {\n        for(var t = 1; t < arguments.length; t++){\n            var o = arguments[t];\n            for(var r in o)({}).hasOwnProperty.call(o, r) && (e[r] = o[r]);\n        }\n        return e;\n    }, n.apply(null, arguments);\n}\nfunction l(e) {\n    return e.matches(\"body *\") ? e : window;\n}\nclass s {\n    constructor(l, s = {}){\n        var i, c = this;\n        this.elements = void 0, this.defaults = {\n            vertical: !0,\n            horizontal: !0,\n            debug: !0\n        }, this.options = void 0, this.paused = !1, this.logger = void 0, this.handleScroll = async function(t) {\n            if (c.paused) return;\n            if (!t.currentTarget) return;\n            const o = c.getScrollContainer(t.currentTarget);\n            await e(), c.mirrorScrollPositions(r(o), o);\n        }, this.elements = [\n            ...l\n        ].filter(Boolean).map((e)=>this.getScrollContainer(e)), this.elements = [\n            ...new Set(this.elements)\n        ], this.options = n({}, this.defaults, s), this.options.debug && (this.logger = (i = \"[scroll-mirror]\", {\n            log: (...e)=>console.log(i, ...e),\n            warn: (...e)=>console.warn(i, ...e),\n            error: (...e)=>console.error(i, ...e)\n        }), function(e, r) {\n            if (e.length < 1) null == r || r.warn(\"No elements provided.\");\n            else {\n                e.length < 2 && (null == r || r.warn(\"Only one element provided.\", e)), e.some((e)=>!e) && (null == r || r.error(\"Some elements are not defined.\", e));\n                for (const n of e)n instanceof HTMLElement && !t(n) && (null == r || r.warn(\"Element doesn't have overflow:\", n)), n instanceof HTMLElement && n.matches(\"body *\") && !o(n) && (null == r || r.warn('No \"overflow: auto;\" or \"overflow: scroll;\" set on element:', n));\n            }\n        }(this.elements, this.logger)), this.elements.forEach((e)=>this.addScrollHandler(e)), this.elements.includes(document.documentElement) && this.mirrorScrollPositions(r(document.documentElement), document.documentElement);\n    }\n    pause() {\n        this.paused = !0;\n    }\n    resume() {\n        this.paused = !1;\n    }\n    destroy() {\n        this.elements.forEach((e)=>this.removeScrollHandler(e));\n    }\n    addScrollHandler(e) {\n        this.removeScrollHandler(e), l(e).addEventListener(\"scroll\", this.handleScroll, {\n            passive: !0\n        });\n    }\n    removeScrollHandler(e) {\n        l(e).removeEventListener(\"scroll\", this.handleScroll);\n    }\n    getScrollContainer(e) {\n        return e instanceof HTMLElement && e.matches(\"body *\") ? e : document.documentElement;\n    }\n    mirrorScrollPositions(e, t = void 0) {\n        this.elements.forEach((o)=>{\n            t !== o && (this.removeScrollHandler(o), this.setScrollPosition(e, o), window.requestAnimationFrame(()=>{\n                this.addScrollHandler(o);\n            }));\n        });\n    }\n    setScrollPosition(e, t) {\n        const { vertical: o, horizontal: r } = this.options, n = t.scrollWidth - t.clientWidth, l = t.scrollHeight - t.clientHeight;\n        o && l && t.scrollTo({\n            top: l * e.y,\n            behavior: \"instant\"\n        }), r && n && t.scrollTo({\n            left: n * e.x,\n            behavior: \"instant\"\n        });\n    }\n    get progress() {\n        const e = this.elements.find((e)=>t(e));\n        return r(e);\n    }\n    set progress(e) {\n        \"number\" == typeof e && (e = {\n            x: e,\n            y: e\n        });\n        const t = n({}, this.progress, e);\n        (function(e, t) {\n            let o = !0;\n            for (const [r, n] of Object.entries(e))(\"number\" != typeof n || n < 0 || n > 1) && (null == t || t.error(`progress.${r} must be a number between 0-1`), o = !1);\n            return o;\n        })(t, this.logger) && this.mirrorScrollPositions(t);\n    }\n}\n //# sourceMappingURL=ScrollMirror.modern.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/scrollmirror/dist/ScrollMirror.modern.js\n");

/***/ })

};
;